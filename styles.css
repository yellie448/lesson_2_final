@import url('https://fonts.googleapis.com/css?family=Tenor+Sans:400');

html {font-size: 100%;} /*16px*/

body{
    font-family: 'Tenor Sans', sans-serif;
    font-weight: 400;
    line-height: 1.75;
    color: #675ADE;
    background-color: #F7F5FF;
}

/* Typography */

h1 {
    margin-top: 0;
    margin: 1rem  0.5rem;
    font-size: 2.209rem;
    /* color: green; */
}
h2 {
    font-size: 1.157rem;
    margin-bottom: 1.5rem;
    text-align: center;
}
p {
    font-size: 1rem;
    margin-bottom: 0.5rem;
}
.text_small{
    font-size: 1.1rem;
}
strong { font-weight: bold; }

.container{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /* margin: 0 auto; */
    width: 100%;

}

.hero{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-image: url('./images/circle_desktop_bg.png');
      /* Set a specific height */
      /* height: 100vh;
      width: 100vw; */
      width: 100%;
      background-size: cover;
      background-position: 50% 50%;

  /* Position and center the image to scale nicely on all screens */
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;

}
/* 
    The transition-property CSS property sets the CSS properties to which a transition effect should be applied. 
    Simply put - its a way to animate an element from one state to another
    
*/
a {
    position: relative;
    text-decoration: none;
    transition: all 0.5s ease-out;
}
/* Here is our before pseudo element */
/* The bottom & left position is how we are getting our line correct */
a::after {
    content: "";
    position: absolute;
    display: block;
    width: 100%;
    height: 2px;
    bottom: 10px;
    left: 0;
    background-color: rgb(0, 203, 125);
    /* transform-origin: top left; */
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

/* Accessability styling */
a:focus {
    background-color:rgb(0, 203, 125);
    color: rgb(0, 203, 125);
}

a:hover {
    color: rgb(0, 203, 125);
    text-decoration: none;
}
a:hover::after {
    transform: scaleX(1);
}  

.profile_photo{
    border-top-left-radius: 50% 30%;
    border-top-right-radius: 50% 30%;
}
.hero h1{
    padding: 2rem 0;
    text-align: center;
    width: 80%;
}
.hero p{
    margin: 8rem 0;
    width: 80%;
    text-align: center;
}

.project_info{
    margin: 0.9rem 0;
    display: flex;
    justify-content: space-between;
}

/* This is a selector for an ID - a solo element that does not need to be a class */
.pengu{
    /* animation-iteration-count: infinite;
    animation-duration: 3s;
    animation-name: slidein; */
}

@keyframes slidein {
    from {
        margin-left: 200%;
    }

    to {
        margin-left: 0%;
    } 
}
/* CSS GRADIENTS */
/* Here we are using RGBA values for the two colours we need to implement the first being the alpha and the second being the bottom colour
the word top is the direction we want the gradient to start */

footer{
    overflow-x: hidden;
    padding: 2rem 0;
    background: -webkit-linear-gradient(top, rgba(255,255,255,0), rgb(211 226 255));
}


/* Media queries lets restyle our site for desktop as mobile design will be default */

@media screen and (min-width: 1024px){

    h1 {
     
        margin: 1rem  0.5rem;
        font-size: 4.209rem;
        /* color: ghostwhite; */
        
    }
    h2 {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        text-align: center;
    }
    p {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
    }
    .text_small{
        font-size: 1.1rem;
    }
    /* Hero styles for desktop */
    .hero h1{
        padding: 2rem 0;
        text-align: center;
        width: 50%;
    }
    .hero p{
        margin: 8rem 0;
        width: 50%;
        text-align: center;
    }
}
